graph TD

    %% ==============================
    %% DEFINICAO DE CORES E ESTILOS
    %% ==============================
    classDef startEnd fill:#ff6b6b,stroke:#d63031,stroke-width:3px,color:white
    classDef process fill:#74b9ff,stroke:#0984e3,stroke-width:2px,color:white
    classDef decision fill:#fdcb6e,stroke:#e17055,stroke-width:2px,color:black
    classDef database fill:#55a3ff,stroke:#2d3436,stroke-width:2px,color:white
    classDef botFlow fill:#00b894,stroke:#00a085,stroke-width:2px,color:white
    classDef humanFlow fill:#e17055,stroke:#d63031,stroke-width:2px,color:white
    classDef systemFlow fill:#a29bfe,stroke:#6c5ce7,stroke-width:2px,color:white
    classDef transferFlow fill:#fd79a8,stroke:#e84393,stroke-width:2px,color:white
    classDef sectorFlow fill:#00cec9,stroke:#00b894,stroke-width:2px,color:white
    
    %% Estilo para subgrafos da legenda (invisiveis)
    classDef legendaInvisible fill:transparent,stroke:transparent

    %% ==============================
    %% LEGENDA MELHORADA COM MAIS ESPACO
    %% ==============================
    subgraph Legenda ["📋 Legenda de Cores e Simbolos do Fluxo"]
        direction TB
        subgraph LegendaRow1 [" "]
            L1[🚀 Inicio/Fim]:::startEnd
            L2[⚙️ Processo]:::process
            L3[❓ Decisao]:::decision
        end
        subgraph LegendaRow2 [" "]
            L4[💾 Banco de Dados]:::database
            L5[🤖 Fluxo do Bot]:::botFlow
        end
        subgraph LegendaRow3 [" "]
            L6[👤 Fluxo Humano]:::humanFlow
            L7[🔧 Sistema/Controle]:::systemFlow
        end
        subgraph LegendaRow4 [" "]
            L8[🔄 Transferencia]:::transferFlow
            L9[🏢 Setores/Especializacao]:::sectorFlow
        end
    end

    %% ==============================
    %% FLUXO PRINCIPAL SEM SUBGRAFOS
    %% ==============================
    
    %% 1. INICIO DO FLUXO
    Start[🚀 1. INICIO DO FLUXO<br/>Nova Mensagem Recebida]:::startEnd
    ReceiveMsg[📱 1.1 webhook_whatsapp<br/>Receber Payload JSON<br/>Validar API KEY e evento<br/>Chamar nova_mensagem]:::process
    ExtractMessageData[🔍 1.2 nova_mensagem<br/>Extrair número do cliente<br/>Identificar tipo da mensagem<br/>Processar conteúdo por tipo<br/>Extrair metadados relevantes]:::systemFlow
    CallMessageProcessor[⚙️ 1.3 processar_mensagem_whatsapp<br/>Determinar tipo de remetente<br/>Buscar/Criar atendimento<br/>Criar objeto Mensagem<br/>Atualizar timestamp cliente]:::systemFlow
    RecoverMessage[💾 1.4 Recuperar Objeto Mensagem<br/>Mensagem.objects.get<br/>Obter atributos completos<br/>Acessar mensagem.atendimento]:::database
    
    %% 2. DECISAO ATENDENTE RESPONSAVEL
    CheckResponsibleAgent{� 2.1 Atendimento tem<br/>atendente responsavel?<br/>Verificar atendimento.atendente_humano}:::decision
    DirectToResponsibleAgent[🎯 2.2 Direcionar para Atendente Responsavel<br/>Mensagem vai diretamente<br/>para atendente definido<br/>Ignorar triagem geral]:::humanFlow
    
    %% 3. CONTROLE CENTRAL DO BOT
    BotControlLogic[🔧 3. CONTROLE CENTRAL DO BOT<br/>Bot assume controle do atendimento<br/>Verificar condições de resposta automática]:::systemFlow
    CheckBotCanRespond{❓ 3.1 _pode_bot_responder_atendimento<br/>Verificar ausência de mensagens<br/>de atendente humano<br/>Determinar se bot pode responder}:::decision
    CheckMessageNeedsProcessing{❓ 3.2 Mensagem precisa<br/>processamento especial?<br/>Verificar tipo != TEXTO}:::decision
    ProcessSpecialContent[🤖 3.3 Processar Conteúdo Especial<br/>Extrair informações contextuais<br/>Metadados específicos por tipo<br/>Preparar para análise de intent]:::botFlow

    %% 4. FLUXO DE RESPOSTA DO BOT
    AnalyzeMessage[🤖 4. FLUXO DE RESPOSTA BOT<br/>Analisar Mensagem<br/>Extrair intent e entidades<br/>Consultar base de conhecimento<br/>Processar contexto]:::botFlow
    ClassifyIntent{❓ 4.1 Classificar Intent<br/>PERGUNTA, AGRADECIMENTO<br/>SATISFACAO ou TRANSFERENCIA?}:::decision
    DetectTransferIntent[🔄 4.1.1 Detectar Intent Transferencia<br/>Cliente solicita mudanca setor<br/>Exemplo: quero falar financeiro<br/>Identificar setor destino]:::transferFlow
    GenerateResponse[💭 4.2 Gerar Resposta<br/>Processar com IA<br/>Calcular confianca_resposta 0-1<br/>Preparar resposta]:::botFlow
    DetectSatisfaction[✅ 4.3 Detectar Satisfacao<br/>Cliente demonstra satisfacao<br/>Agradecimento ou resolucao<br/>Preparar encerramento]:::botFlow
    CheckConfidence{❓ 4.4 Confianca >= 0.5?}:::decision
    TransferToHuman[👤 4.5 transferir_atendimento_automatico<br/>Baixa confianca - Transferir]:::humanFlow
    CheckHighConfidence{❓ 4.6 Confianca >= 0.8?}:::decision
    SendAutomaticResponse[📤 4.7 Resposta Automatica<br/>Salvar mensagem BOT<br/>Enviar para cliente<br/>Alta confianca]:::botFlow
    RequireReview[⚠️ 4.8 Resposta Requer Revisao<br/>Salvar com baixa confianca<br/>Logica customizavel<br/>Confianca media]:::systemFlow
    
    %% 5. TRANSFERENCIA PARA ATENDENTE
    FindAgent[👥 5. TRANSFERENCIA PARA ATENDENTE<br/>buscar_atendente_disponivel<br/>Filtrar ativo=True, disponivel=True<br/>Verificar max_atendimentos_simultaneos<br/>Balanceamento de carga]:::humanFlow
    BuscarAtendenteDisponivel[🔍 5.1 buscar_atendente_disponivel<br/>Localizacao de atendente apropriado<br/>Filtros: ativo=True, disponivel=True<br/>max_atendimentos_simultaneos<br/>Balanceamento de carga]:::systemFlow
    CheckSpecificSector{🏢 5.1.1 Transfer solicitada<br/>para setor especifico?<br/>Verificar setor destino}:::decision
    BuscarPorSetor[🏢 5.1.2 buscar_atendente_por_setor<br/>Filtrar por setor especifico<br/>Priorizar especialistas<br/>Verificar disponibilidade]:::sectorFlow
    AgentAvailable{❓ 5.2 Atendente Disponivel?}:::decision
    NoAgentFlow[⚠️ 5.3 Nenhum Atendente Disponivel<br/>Notificar administradores<br/>Aguardar intervalo<br/>Preparar nova busca]:::systemFlow
    WaitAndRetry[⏳ 5.4 Aguardar e Tentar Novamente<br/>Intervalo de espera configuravel<br/>Log de tentativa<br/>Incrementar contador]:::systemFlow
    AssignAgent[👤 5.5 transferir_para_humano<br/>atendimento.atendente_humano = atendente<br/>Status: TRANSFERIDO<br/>Historico: transferencia automatica]:::humanFlow
    NotifyAgent[📬 5.6 Notificar Atendente<br/>Atualizar ultima_atividade<br/>Enviar notificacao<br/>Preparar interface]:::humanFlow
    HumanTakeover[👤 5.7 Atendente Assume Controle<br/>Bot para de responder automaticamente]:::humanFlow
    
    %% 6. ATENDIMENTO HUMANO ATIVO
    WaitHumanAction[👤 6. ATENDIMENTO HUMANO ATIVO<br/>Aguardar Acao do Atendente<br/>Status: AGUARDANDO_ATENDENTE]:::humanFlow
    HumanResponse{❓ 6.1 Atendente enviou<br/>resposta?}:::decision
    WaitHumanTimeout[⏰ 6.1.1 Aguardar Timeout Atendente<br/>Periodo especifico configuravel<br/>Monitorar tempo limite<br/>Preparar notificacao]:::systemFlow
    NotifyAgentAgain[📢 6.1.2 Notificar Atendente Novamente<br/>Alerta de timeout<br/>Lembrete de resposta pendente<br/>Incrementar contador notificacoes]:::humanFlow
    SaveHumanMessage[💾 6.2 enviar_mensagem_atendente<br/>Remetente: ATENDENTE_HUMANO<br/>Atualizar ultima_atividade<br/>Metadados do atendente]:::humanFlow
    
    %% 6.5 NOVO: TRANSFERENCIA ENTRE ATENDENTES/SETORES
    CheckTransferCommand{🔄 6.3 Atendente solicitou<br/>transferencia?<br/>Comando: /transfer}:::decision
    ProcessTransferCommand[🔄 6.4 processar_comando_transferencia<br/>Extrair setor/atendente destino<br/>Validar permissoes<br/>Preparar historico]:::transferFlow
    SelectTransferTarget{🎯 6.5 Tipo de Transferencia?<br/>SETOR ou ATENDENTE?}:::decision
    
    %% 6.5.1 TRANSFERENCIA POR SETOR
    TransferToSector[🏢 6.5.1 transferir_para_setor<br/>Buscar atendentes do setor<br/>Aplicar criterios disponibilidade<br/>Balanceamento de carga setor]:::sectorFlow
    
    %% 6.5.2 TRANSFERENCIA PARA ATENDENTE ESPECIFICO
    TransferToSpecificAgent[👤 6.5.2 transferir_para_atendente_especifico<br/>Validar atendente existe<br/>Verificar disponibilidade<br/>Forcar transferencia se necessario]:::transferFlow
    
    %% 6.6 FINALIZACAO DE TRANSFERENCIA
    UpdateTransferHistory[📝 6.6 atualizar_historico_transferencia<br/>Registrar atendente origem<br/>Registrar destino<br/>Motivo da transferencia<br/>timestamp]:::database
    NotifyNewAgent[📬 6.7 notificar_novo_atendente<br/>Enviar contexto completo<br/>Historico da conversa<br/>Detalhes da transferencia]:::humanFlow
    NotifyOldAgent[📤 6.8 notificar_atendente_origem<br/>Confirmar transferencia<br/>Liberar da conversa<br/>Atualizar contadores]:::humanFlow

  	%% 7. ENCERRAR ATENDIMENTO
    CloseTicketFlow[🏁 7. ENCERRAR ATENDIMENTO<br/>finalizar_atendimento<br/>Metodo do modelo Atendimento]:::systemFlow
    GenerateClosingMsg[💬 7.1 Gerar Mensagem Final<br/>Resumo da conversa<br/>Solicitacao de avaliacao<br/>Mensagem de despedida]:::botFlow
    UpdateTicketDB[💾 7.2 UPDATE Atendimento<br/>Status: RESOLVIDO<br/>data_fim = now<br/>Historico: Atendimento finalizado]:::database
    SaveClosingMsgDB[💾 7.3 CREATE Mensagem<br/>Conteudo de encerramento<br/>Remetente: BOT<br/>timestamp automatico]:::database
    SendClosingMessage[📤 7.4 Enviar Mensagem Final<br/>Solicitar avaliacao opcional<br/>Finalizar conversa]:::botFlow
    EndFlow[🏁 7.5 Fim do Fluxo<br/>Atendimento Encerrado]:::startEnd
     


    %% ==============================
    %% CONEXOES DO FLUXO PRINCIPAL
    %% ==============================
    
    %% Fluxo sequencial principal
    Start --> ReceiveMsg
    ReceiveMsg --> ExtractMessageData
    ExtractMessageData --> CallMessageProcessor
    CallMessageProcessor --> RecoverMessage
    RecoverMessage --> CheckResponsibleAgent
    
    %% Decisao atendente responsavel (JA FEITA NO PROCESSAMENTO)
    CheckResponsibleAgent -->|✅ Sim| DirectToResponsibleAgent
    CheckResponsibleAgent -->|❌ Nao| BotControlLogic
    
    %% Fluxo direto para atendente responsavel
    DirectToResponsibleAgent --> WaitHumanAction
    
    %% Bot assume controle (sem verificacoes redundantes)
    BotControlLogic --> CheckBotCanRespond
    
    %% Verificação se o bot pode responder - UNICA VERIFICACAO NO FLUXO
    CheckBotCanRespond -->|✅ Sim| CheckMessageNeedsProcessing
    CheckBotCanRespond -->|❌ Não| WaitHumanAction
    
    %% Bifurcacao para tratamento de tipo de mensagem
    CheckMessageNeedsProcessing -->|✅ Precisa| ProcessSpecialContent
    CheckMessageNeedsProcessing -->|❌ Não precisa| AnalyzeMessage
    
    ProcessSpecialContent --> AnalyzeMessage
    
    AnalyzeMessage --> ClassifyIntent
    
    %% Bifurcacao por tipo de intent
    ClassifyIntent -->|❓ PERGUNTA| GenerateResponse
    ClassifyIntent -->|✅ AGRADECIMENTO/SATISFACAO| DetectSatisfaction
    ClassifyIntent -->|🔄 TRANSFERENCIA| DetectTransferIntent
    
    %% Fluxo de transferencia por intent do cliente
    DetectTransferIntent --> FindAgent
    
    %% Fluxo de geracao de resposta para perguntas
    GenerateResponse --> CheckConfidence
    CheckConfidence -->|❌ Nao| TransferToHuman
    CheckConfidence -->|✅ Sim| CheckHighConfidence
    
    CheckHighConfidence -->|✅ Sim| SendAutomaticResponse
    CheckHighConfidence -->|❌ Nao| RequireReview
    
    %% Fluxo de satisfacao direta
    DetectSatisfaction --> CloseTicketFlow
    
    %% Fluxo especifico do BOT apos resposta
    SendAutomaticResponse --> BotWaitClientResponse
    RequireReview --> BotWaitClientResponse
    BotWaitClientResponse[⏳ 4.9 Bot Aguarda Resposta Cliente<br/>Status: AGUARDANDO_CLIENTE<br/>Timeout configuravel<br/>Loop ate satisfacao ou timeout]:::botFlow
    
    %% Fluxo especifico do HUMANO apos resposta
    SaveHumanMessage --> HumanDecision
    HumanDecision{❓ 6.9 Atendente escolhe<br/>proximo passo?}:::decision
    HumanWaitClient[⏳ 6.10 Humano Aguarda Cliente<br/>Status: AGUARDANDO_CLIENTE_HUMANO<br/>Sem timeout automatico<br/>Controle total do atendente]:::humanFlow
    HumanFinalizeNow[🏁 6.11 Atendente Finaliza Agora<br/>Decisao direta do atendente<br/>Problema resolvido<br/>Encerramento imediato]:::humanFlow
    
    %% Fluxo de Transferencia
    TransferToHuman --> FindAgent
    DetectTransferIntent --> FindAgent
    FindAgent --> BuscarAtendenteDisponivel
    BuscarAtendenteDisponivel --> CheckSpecificSector
    
    %% Bifurcacao por tipo de busca
    CheckSpecificSector -->|✅ Sim| BuscarPorSetor
    CheckSpecificSector -->|❌ Nao| AgentAvailable
    BuscarPorSetor --> AgentAvailable
    
    AgentAvailable -->|✅ Sim| AssignAgent
    AgentAvailable -->|❌ Nao| NoAgentFlow
    
    %% Loop de busca de atendente
    NoAgentFlow --> WaitAndRetry
    WaitAndRetry -.->|🔄 5.4.1 Nova Busca Loop<br/>Tentar buscar atendente novamente<br/>Loop continuo ate encontrar| CheckSpecificSector
    
    AssignAgent --> NotifyAgent
    NotifyAgent --> HumanTakeover
    
    HumanTakeover --> WaitHumanAction
    
    %% Fluxo do Bot - Caminhos especificos
    BotWaitClientResponse -.->|🔄 4.9.1 Nova Mensagem Cliente<br/>Retorna para inicio do fluxo<br/>Passa novamente por intent 4.1| ReceiveMsg
    BotWaitClientResponse -->|⏰ Timeout Cliente| CloseTicketFlow
    
    %% Fluxo Humano - Caminhos especificos  
    SaveHumanMessage --> CheckTransferCommand
    CheckTransferCommand -->|❌ Nao| HumanDecision
    CheckTransferCommand -->|✅ Sim| ProcessTransferCommand
    
    %% Fluxo de transferencia entre atendentes
    ProcessTransferCommand --> SelectTransferTarget
    SelectTransferTarget -->|🏢 SETOR| TransferToSector
    SelectTransferTarget -->|👤 ATENDENTE| TransferToSpecificAgent
    
    %% Convergencia das transferencias
    TransferToSector --> UpdateTransferHistory
    TransferToSpecificAgent --> UpdateTransferHistory
    UpdateTransferHistory --> NotifyNewAgent
    NotifyNewAgent --> NotifyOldAgent
    NotifyOldAgent --> WaitHumanAction
    
    HumanDecision -->|🏁 Finalizar Agora| HumanFinalizeNow
    HumanDecision -->|⏳ Aguardar Cliente| HumanWaitClient
    
    HumanFinalizeNow --> CloseTicketFlow
    HumanWaitClient -.->|🔄 6.10.1 Nova Mensagem Cliente Loop<br/>Cliente responde para atendente<br/>Reiniciar fluxo mantendo controle humano| ReceiveMsg
    
    %% Fluxo Humano antigo - ajustar para nova estrutura
    HumanFlow --> WaitHumanAction
    WaitHumanAction --> HumanResponse
    HumanResponse -->|✅ Sim| SaveHumanMessage
    HumanResponse -->|❌ Nao - Timeout| WaitHumanTimeout
    
    %% Loop de timeout e notificacao do atendente
    WaitHumanTimeout --> NotifyAgentAgain
    NotifyAgentAgain -.->|🔄 6.1.3 Loop Notificacao Atendente<br/>Aguardar periodo e notificar novamente<br/>Loop continuo ate resposta ou fechamento| HumanResponse
    
    %% Fluxo de Encerramento
    CloseTicketFlow --> GenerateClosingMsg
    GenerateClosingMsg --> UpdateTicketDB
    UpdateTicketDB --> SaveClosingMsgDB
    SaveClosingMsgDB --> SendClosingMessage
    SendClosingMessage --> EndFlow
    
    %% Loops de Retorno - Estrutura hierarquica atualizada
    WaitHumanAction -.->|🔄 6.1.4 Nova Mensagem Atendente Loop<br/>Cliente responde durante espera atendente<br/>Retornar ao inicio| ReceiveMsg
    
    %% Aplicar estilos aos subgrafos da legenda
    class LegendaRow1,LegendaRow2,LegendaRow3,LegendaRow4 legendaInvisible
    
    %% Nota: SIMPLIFICADO v5.0: Eliminadas verificações redundantes - busca de atendimento já feita em 1.3
    %% Nota: CONTROLE DIRETO 2.1: Verificação de atendente responsável feita logo após recuperar mensagem
    %% Nota: BOT ASSUME CONTROLE 3.0: Verificação bot response centralizada em um ponto único
    %% Nota: Inclui tratamento de midia via IA 3.3 para conversao de conteudo nao-texto
    %% Nota: UNICA VERIFICACAO 3.1: "_pode_bot_responder_atendimento" realizada apenas uma vez
    %% Nota: Item 5.3-5.4-5.4.1 implementa loop continuo de busca por atendente disponivel
    %% Nota: Classificacao de Intent 4.1 determina fluxo: PERGUNTA -> resposta IA vs SATISFACAO -> encerramento vs TRANSFERENCIA
    %% Nota: Bot aguarda resposta 4.9 e retorna para inicio 4.9.1 passando novamente por classificacao intent 4.1
    %% Nota: Fluxos finais distintos - Bot 4.x simplificado vs Humano 6.x controle manual
    %% Nota: Loops hierarquicos: 4.9.1 retorno bot, 5.4.1 busca atendente, 6.1.x timeout e controle humano
    %% Nota: DIRECIONAMENTO DIRETO 2.1-2.2: Atendente responsável definido bypassa controle do bot
    %% Nota: NOVO 4.1.1: Intent de transferencia detectada pelo bot direciona para mudanca de setor automaticamente
    %% Nota: NOVO 5.1.1-5.1.2: Busca de atendente pode ser filtrada por setor especifico ou geral
    %% Nota: NOVO 6.3-6.8: Atendentes podem transferir entre si usando comandos, com historico completo
    %% Nota: Sistema suporta transferencia por SETOR (automatica) e por ATENDENTE ESPECIFICO (manual)
