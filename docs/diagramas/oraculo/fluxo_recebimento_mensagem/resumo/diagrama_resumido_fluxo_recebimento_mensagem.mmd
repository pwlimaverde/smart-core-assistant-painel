graph TD
    %% ==============================
    %% DEFINICAO DE CORES E ESTILOS
    %% ==============================
    classDef startEnd fill:#ff6b6b,stroke:#d63031,stroke-width:3px,color:white
    classDef process fill:#74b9ff,stroke:#0984e3,stroke-width:2px,color:white
    classDef decision fill:#fdcb6e,stroke:#e17055,stroke-width:2px,color:black
    classDef botFlow fill:#00b894,stroke:#00a085,stroke-width:2px,color:white
    classDef humanFlow fill:#e17055,stroke:#d63031,stroke-width:2px,color:white
    classDef systemFlow fill:#a29bfe,stroke:#6c5ce7,stroke-width:2px,color:white

    %% ==============================
    %% LEGENDA SIMPLIFICADA
    %% ==============================
    subgraph Legenda ["üìã Legenda"]
        L1[üöÄ Inicio/Fim]:::startEnd
        L2[‚öôÔ∏è Processo]:::process
        L3[‚ùì Decisao]:::decision
        L4[ü§ñ Bot]:::botFlow
        L5[üë§ Humano]:::humanFlow
        L6[üîß Sistema]:::systemFlow
    end

    %% ==============================
    %% FLUXO PRINCIPAL RESUMIDO
    %% ==============================
    
    %% 1. INICIO
    Start[üöÄ Nova Mensagem<br/>WhatsApp Recebida]:::startEnd
    ProcessMessage[‚öôÔ∏è Processar Mensagem<br/>‚Ä¢ Normalizar telefone<br/>‚Ä¢ Converter m√≠dia para texto<br/>‚Ä¢ Buscar/criar cliente]:::process
    
    %% 2. VERIFICAR ATENDIMENTO
    CheckActiveTicket{‚ùì Existe atendimento<br/>ativo para cliente?}:::decision
    
    %% 3. CRIAR OU CONTINUAR
    CreateTicket[üìã Criar Novo<br/>Atendimento<br/>Status: EM_ANDAMENTO]:::systemFlow
    ContinueTicket[üìã Continuar<br/>Atendimento Existente<br/>Salvar nova mensagem]:::systemFlow
    
    %% 4. CONTROLE DE RESPOSTA
    CheckBotControl{‚ùì Bot pode responder?<br/>Sem controle humano?}:::decision
    
    %% 5. FLUXO HUMANO
    TransferToHuman[üë§ Transferir para<br/>Atendente Humano<br/>‚Ä¢ Buscar dispon√≠vel<br/>‚Ä¢ Notificar atendente]:::humanFlow
    HumanResponse[üë§ Atendente Responde<br/>‚Ä¢ Controle total humano<br/>‚Ä¢ Bot inativo]:::humanFlow
    
    %% 6. FLUXO BOT
    AnalyzeIntent{‚ùì Classificar Intent<br/>PERGUNTA ou SATISFACAO?}:::decision
    GenerateResponse[ü§ñ Gerar Resposta IA<br/>Calcular confian√ßa 0-1]:::botFlow
    CheckConfidence{‚ùì Confian√ßa ‚â• 0.5?}:::decision
    
    %% 7. RESPOSTA BOT
    AutoResponse[ü§ñ Resposta Autom√°tica<br/>Confian√ßa ‚â• 0.8]:::botFlow
    ReviewResponse[‚ö†Ô∏è Resposta p/ Revis√£o<br/>Confian√ßa 0.5-0.8]:::botFlow
    
    %% 8. SATISFACAO E ENCERRAMENTO
    DetectSatisfaction[‚úÖ Cliente Satisfeito<br/>Expressa gratid√£o<br/>ou resolu√ß√£o]:::botFlow
    CloseTicket[üèÅ Encerrar Atendimento<br/>‚Ä¢ Mensagem final<br/>‚Ä¢ Status: RESOLVIDO<br/>‚Ä¢ Solicitar avalia√ß√£o]:::systemFlow
    
    %% 9. AGUARDAR RESPOSTA
    WaitResponse[‚è≥ Aguardar Resposta<br/>Cliente/Atendente<br/>Com timeout]:::systemFlow
    
    %% 10. FIM
    End[üèÅ Atendimento<br/>Finalizado]:::startEnd

    %% ==============================
    %% CONEXOES DO FLUXO
    %% ==============================
    
    %% Fluxo principal
    Start --> ProcessMessage
    ProcessMessage --> CheckActiveTicket
    
    %% Decis√£o de atendimento
    CheckActiveTicket -->|‚ùå N√£o| CreateTicket
    CheckActiveTicket -->|‚úÖ Sim| ContinueTicket
    
    %% Converg√™ncia para controle
    CreateTicket --> CheckBotControl
    ContinueTicket --> CheckBotControl
    
    %% Decis√£o de controle
    CheckBotControl -->|‚ùå N√£o - Humano ativo| TransferToHuman
    CheckBotControl -->|‚úÖ Sim - Bot livre| AnalyzeIntent
    
    %% Fluxo humano
    TransferToHuman --> HumanResponse
    HumanResponse --> WaitResponse
    
    %% Fluxo bot - classifica√ß√£o
    AnalyzeIntent -->|‚ùì PERGUNTA| GenerateResponse
    AnalyzeIntent -->|‚úÖ SATISFACAO| DetectSatisfaction
    
    %% Fluxo bot - confian√ßa
    GenerateResponse --> CheckConfidence
    CheckConfidence -->|‚ùå < 0.5| TransferToHuman
    CheckConfidence -->|‚úÖ ‚â• 0.5| CheckHighConfidence{‚ùì Confian√ßa ‚â• 0.8?}:::decision
    
    %% Resposta bot
    CheckHighConfidence -->|‚úÖ Alta| AutoResponse
    CheckHighConfidence -->|‚ùå M√©dia| ReviewResponse
    
    %% Converg√™ncia para espera
    AutoResponse --> WaitResponse
    ReviewResponse --> WaitResponse
    
    %% Satisfa√ß√£o direta
    DetectSatisfaction --> CloseTicket
    
    %% Loops de retorno
    WaitResponse -.->|üîÑ Nova mensagem| ProcessMessage
    WaitResponse -->|‚è∞ Timeout/Finalizar| CloseTicket
    
    %% Encerramento
    CloseTicket --> End

    %% ==============================
    %% NOTAS IMPORTANTES
    %% ==============================
    %% Nota 1: M√≠dia (√°udio, imagem, v√≠deo) √© convertida para texto via IA
    %% Nota 2: Um cliente s√≥ pode ter um atendimento ativo por vez
    %% Nota 3: Bot fica inativo quando atendente humano participa
    %% Nota 4: Classifica√ß√£o de intent determina fluxo: pergunta vs satisfa√ß√£o
    %% Nota 5: Sistema de confian√ßa evita respostas inadequadas
    %% Nota 6: Loops permitem conversas cont√≠nuas at√© resolu√ß√£o
