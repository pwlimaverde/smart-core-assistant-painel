# Generated by Django 5.2.1 on 2025-09-07 12:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
        ('operacional', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL("CREATE EXTENSION IF NOT EXISTS vector;"),
        migrations.CreateModel(
            name='Atendimento',
            fields=[
                ('id', models.AutoField(help_text='Chave primária do registro', primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('aguardando_inicial', 'Aguardando Interação Inicial'), ('em_andamento', 'Em Andamento'), ('aguardando_contato', 'Aguardando Contato'), ('aguardando_atendente', 'Aguardando Atendente'), ('resolvido', 'Resolvido'), ('cancelado', 'Cancelado'), ('transferido', 'Transferido para Humano')], default='aguardando_inicial', help_text='Status atual do atendimento', max_length=20)),
                ('data_inicio', models.DateTimeField(auto_now_add=True, help_text='Data de início do atendimento')),
                ('data_fim', models.DateTimeField(blank=True, help_text='Data de finalização do atendimento', null=True)),
                ('assunto', models.CharField(blank=True, help_text='Assunto/resumo do atendimento', max_length=200, null=True)),
                ('prioridade', models.CharField(choices=[('baixa', 'Baixa'), ('normal', 'Normal'), ('alta', 'Alta'), ('urgente', 'Urgente')], default='normal', help_text='Prioridade do atendimento', max_length=10)),
                ('contexto_conversa', models.JSONField(blank=True, default=dict, help_text='Contexto atual da conversa (variáveis, estado, etc.)')),
                ('historico_status', models.JSONField(blank=True, default=list, help_text='Histórico de mudanças de status')),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags para categorização do atendimento')),
                ('avaliacao', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], help_text='Avaliação do atendimento (1-5)', null=True)),
                ('feedback', models.TextField(blank=True, help_text='Feedback do contato', null=True)),
                ('atendente_humano', models.ForeignKey(blank=True, help_text='Atendente humano responsável pelo atendimento (se transferido)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='atendimentos', to='operacional.atendentehumano')),
                ('contato', models.ForeignKey(help_text='Contato vinculado ao atendimento', on_delete=django.db.models.deletion.CASCADE, related_name='atendimentos', to='clientes.contato')),
            ],
            options={
                'verbose_name': 'Atendimento',
                'verbose_name_plural': 'Atendimentos',
                'db_table': 'oraculo_atendimento',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Mensagem',
            fields=[
                ('id', models.AutoField(help_text='Chave primária do registro', primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('extendedTextMessage', 'Texto com formatação, citações, fontes, etc.'), ('imageMessage', 'Imagem recebida, JPG/PNG, com caption possível'), ('videoMessage', 'Vídeo recebido, com legenda possível'), ('audioMessage', 'Áudio recebido (.mp4, .mp3), com duração/ptt'), ('documentMessage', 'Arquivo genérico (PDF, DOCX etc.)'), ('stickerMessage', 'Sticker no formato WebP'), ('locationMessage', 'Coordinates de localização (lat/long)'), ('contactMessage', 'vCard com dados de contato'), ('listMessage', 'Mensagem interativa com opções em lista'), ('buttonsMessage', 'Botões clicáveis dentro da mensagem'), ('pollMessage', 'Opções de enquete dentro da mensagem'), ('reactMessage', 'Reação (emoji) a uma mensagem existente')], default='extendedTextMessage', help_text='Tipo da mensagem', max_length=25)),
                ('conteudo', models.TextField(help_text='Conteúdo da mensagem')),
                ('remetente', models.CharField(choices=[('contato', 'Contato'), ('bot', 'Bot/Sistema'), ('atendente_humano', 'Atendente Humano')], default='contato', help_text='Tipo do remetente da mensagem', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Timestamp da mensagem')),
                ('message_id_whatsapp', models.CharField(blank=True, help_text='ID da mensagem no WhatsApp', max_length=100, null=True)),
                ('metadados', models.JSONField(blank=True, default=dict, help_text='Metadados adicionais da mensagem (mídia, localização, etc.)')),
                ('respondida', models.BooleanField(default=False, help_text='Indica se a mensagem foi respondida')),
                ('resposta_bot', models.TextField(blank=True, help_text='Resposta gerada pelo bot', null=True)),
                ('intent_detectado', models.JSONField(blank=True, default=list, help_text="Intents detectados pelo processamento de NLP (formato: lista de dicionários como {'saudacao': 'Olá', 'pergunta': 'tudo bem?'})")),
                ('entidades_extraidas', models.JSONField(blank=True, default=list, help_text="Entidades extraídas da mensagem (formato: lista de dicionários como {'pessoa': 'João Silva'})")),
                ('confianca_resposta', models.FloatField(blank=True, help_text='Nível de confiança da resposta do bot (0-1)', null=True)),
                ('atendimento', models.ForeignKey(help_text='Atendimento ao qual a mensagem pertence', on_delete=django.db.models.deletion.CASCADE, related_name='mensagens', to='atendimentos.atendimento')),
            ],
            options={
                'verbose_name': 'Mensagem',
                'verbose_name_plural': 'Mensagens',
                'db_table': 'oraculo_mensagem',
                'ordering': ['timestamp'],
            },
        ),
    ]
