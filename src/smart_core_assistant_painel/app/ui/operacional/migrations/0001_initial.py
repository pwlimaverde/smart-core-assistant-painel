# Generated by Django 5.2.1 on 2025-09-07 12:18

import django.db.models.deletion
import smart_core_assistant_painel.app.ui.operacional.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('telefone_instancia', models.CharField(max_length=20, unique=True, validators=[smart_core_assistant_painel.app.ui.operacional.models.validate_telefone_instancia])),
                ('api_key', models.CharField(max_length=100, unique=True, validators=[smart_core_assistant_painel.app.ui.operacional.models.validate_api_key])),
                ('instance_id', models.CharField(blank=True, max_length=100, null=True)),
                ('url_evolution_api', models.URLField(default='http://www.evolution-api:8080')),
                ('ativo', models.BooleanField(default=True)),
                ('configuracoes', models.JSONField(blank=True, default=dict)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('ultima_validacao', models.DateTimeField(blank=True, null=True)),
                ('metadados', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
                'db_table': 'oraculo_departamento',
                'ordering': ['nome'],
                'indexes': [models.Index(fields=['api_key'], name='oraculo_dep_api_key_7c8ebb_idx'), models.Index(fields=['telefone_instancia'], name='oraculo_dep_telefon_bc96c8_idx'), models.Index(fields=['ativo', 'nome'], name='oraculo_dep_ativo_c6d037_idx')],
            },
        ),
        migrations.CreateModel(
            name='AtendenteHumano',
            fields=[
                ('id', models.AutoField(help_text='Chave primária do registro', primary_key=True, serialize=False)),
                ('telefone', models.CharField(blank=True, help_text='Número de telefone do atendente (usado como sessão única)', max_length=20, null=True, unique=True, validators=[smart_core_assistant_painel.app.ui.operacional.models.validate_telefone])),
                ('nome', models.CharField(help_text='Nome completo do atendente', max_length=100)),
                ('cargo', models.CharField(help_text='Cargo/função do atendente', max_length=100)),
                ('email', models.EmailField(blank=True, help_text='E-mail corporativo do atendente', max_length=254, null=True)),
                ('usuario_sistema', models.CharField(blank=True, help_text='Usuário do sistema para login (se aplicável)', max_length=50, null=True)),
                ('ativo', models.BooleanField(default=True, help_text='Status de atividade do atendente')),
                ('disponivel', models.BooleanField(default=True, help_text='Disponibilidade atual para receber novos atendimentos')),
                ('max_atendimentos_simultaneos', models.PositiveIntegerField(default=5, help_text='Máximo de atendimentos simultâneos permitidos')),
                ('especialidades', models.JSONField(blank=True, default=list, help_text='Lista de especialidades/áreas de conhecimento do atendente')),
                ('horario_trabalho', models.JSONField(blank=True, default=dict, help_text="Horário de trabalho (ex: {'segunda': '08:00-18:00', 'terca': '08:00-18:00'})")),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, help_text='Data de cadastro no sistema')),
                ('ultima_atividade', models.DateTimeField(auto_now=True, help_text='Data da última atividade no sistema')),
                ('metadados', models.JSONField(blank=True, default=dict, help_text='Informações adicionais do atendente (configurações, preferências, etc.)')),
                ('departamento', models.ForeignKey(blank=True, help_text='Departamento ao qual o atendente pertence', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='atendentes', to='operacional.departamento')),
            ],
            options={
                'verbose_name': 'Atendente Humano',
                'verbose_name_plural': 'Atendentes Humanos',
                'db_table': 'oraculo_atendentehumano',
                'ordering': ['nome'],
            },
        ),
    ]
