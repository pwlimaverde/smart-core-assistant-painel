# Generated by Django 5.2.1 on 2025-09-07 12:18

import django.db.models.deletion
import pgvector.django.vector
import smart_core_assistant_painel.app.ui.treinamento.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Treinamento',
            fields=[
                ('id', models.AutoField(help_text='Chave primária do registro', primary_key=True, serialize=False)),
                ('tag', models.CharField(help_text='Campo obrigatório para identificar o treinamento', max_length=40, validators=[smart_core_assistant_painel.app.ui.treinamento.models.validate_identificador])),
                ('grupo', models.CharField(help_text='Campo obrigatório para identificar o grupo do treinamento', max_length=40, validators=[smart_core_assistant_painel.app.ui.treinamento.models.validate_identificador])),
                ('conteudo', models.TextField(blank=True, help_text='Conteúdo completo do treinamento (antes da divisão em chunks)', null=True)),
                ('treinamento_finalizado', models.BooleanField(default=False, help_text='Indica se o treinamento foi finalizado')),
                ('treinamento_vetorizado', models.BooleanField(default=False, help_text='Indica se o treinamento foi vetorizado com sucesso')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, help_text='Data de criação do treinamento')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, help_text='Data da última atualização do treinamento')),
            ],
            options={
                'verbose_name': 'Treinamento',
                'verbose_name_plural': 'Treinamentos',
                'db_table': 'oraculo_treinamento',
                'ordering': ['-data_criacao'],
                'indexes': [models.Index(fields=['tag', 'grupo'], name='oraculo_tre_tag_680c1e_idx'), models.Index(fields=['data_criacao'], name='oraculo_tre_data_cr_87588e_idx'), models.Index(fields=['treinamento_finalizado', 'treinamento_vetorizado'], name='oraculo_tre_treinam_cc7b72_idx')],
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(help_text='Chave primária do registro', primary_key=True, serialize=False)),
                ('conteudo', models.TextField(blank=True, help_text='Conteúdo do chunk de treinamento', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Metadados do documento (tag, grupo, source, etc.)')),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1024, help_text='Vetor de embeddings do conteúdo do documento', null=True)),
                ('ordem', models.PositiveIntegerField(default=1, help_text='Ordem do documento no treinamento')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, help_text='Data de criação do documento')),
                ('treinamento', models.ForeignKey(help_text='Treinamento ao qual este documento pertence', on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='treinamento.treinamento')),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
                'db_table': 'oraculo_documento',
                'ordering': ['treinamento', 'ordem'],
                'indexes': [models.Index(fields=['treinamento', 'ordem'], name='oraculo_doc_treinam_7b2674_idx')],
            },
        ),
    ]
