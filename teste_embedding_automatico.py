"""
Teste do Fluxo Autom√°tico de Embedding
=====================================

Este arquivo demonstra como o embedding √© gerado automaticamente
agora que removemos os m√©todos generate_embedding manuais.
"""

from django.test import TestCase
from unittest.mock import patch, MagicMock

from src.smart_core_assistant_painel.app.ui.oraculo.models_documento import Documento
from src.smart_core_assistant_painel.app.ui.oraculo.models_treinamento import Treinamento
from src.smart_core_assistant_painel.app.ui.oraculo.embedding_data import EmbeddingData


class TestFluxoAutomaticoEmbedding(TestCase):
    """Testa o fluxo autom√°tico de gera√ß√£o de embeddings."""
    
    def setUp(self):
        """Configura dados de teste."""
        self.treinamento = Treinamento.objects.create(
            tag="teste_automatico",
            grupo="teste",
            conteudo="Conte√∫do de teste para embedding autom√°tico",
            treinamento_finalizado=True
        )
    
    @patch.object(EmbeddingData, 'gerar_embedding_para_documento')
    def test_embedding_automatico_na_criacao(self, mock_embedding):
        """Testa se o embedding √© gerado automaticamente ao criar documento."""
        # Configura mock
        mock_embedding.return_value = [0.1, 0.2, 0.3] * 300  # 900 dimens√µes
        
        # Cria documento - embedding deve ser gerado automaticamente
        documento = Documento.objects.create(
            treinamento=self.treinamento,
            conteudo="Teste de conte√∫do para embedding autom√°tico",
            ordem=1
        )
        
        # Verifica se o embedding foi gerado
        mock_embedding.assert_called_once_with("Teste de conte√∫do para embedding autom√°tico")
        self.assertIsNotNone(documento.embedding)
        self.assertEqual(len(documento.embedding), 900)
    
    @patch.object(EmbeddingData, 'gerar_embedding_para_documento')
    def test_sem_embedding_se_treinamento_nao_finalizado(self, mock_embedding):
        """Testa que embedding n√£o √© gerado se treinamento n√£o estiver finalizado."""
        # Cria treinamento n√£o finalizado
        treinamento_nao_finalizado = Treinamento.objects.create(
            tag="nao_finalizado",
            grupo="teste",
            conteudo="Conte√∫do teste",
            treinamento_finalizado=False
        )
        
        # Cria documento
        documento = Documento.objects.create(
            treinamento=treinamento_nao_finalizado,
            conteudo="Teste sem embedding",
            ordem=1
        )
        
        # Verifica que embedding n√£o foi gerado
        mock_embedding.assert_not_called()
        self.assertIsNone(documento.embedding)
    
    @patch.object(EmbeddingData, 'gerar_embedding_para_documento')
    def test_sem_embedding_se_conteudo_vazio(self, mock_embedding):
        """Testa que embedding n√£o √© gerado se conte√∫do estiver vazio."""
        # Cria documento com conte√∫do vazio
        documento = Documento.objects.create(
            treinamento=self.treinamento,
            conteudo="",
            ordem=1
        )
        
        # Verifica que embedding n√£o foi gerado
        mock_embedding.assert_not_called()
        self.assertIsNone(documento.embedding)
    
    @patch.object(EmbeddingData, 'gerar_embedding_para_documento')
    def test_vetorizacao_por_treinamento_usa_save_automatico(self, mock_embedding):
        """Testa que a vetoriza√ß√£o por treinamento usa o save autom√°tico."""
        # Configura mock
        mock_embedding.return_value = [0.1] * 1024
        
        # Cria documentos sem embedding (simulando que foram criados antes da finaliza√ß√£o)
        documento1 = Documento(
            treinamento=self.treinamento,
            conteudo="Documento 1",
            ordem=1
        )
        documento1.save()  # Save direto sem chamar m√©todos de embedding
        
        documento2 = Documento(
            treinamento=self.treinamento,
            conteudo="Documento 2", 
            ordem=2
        )
        documento2.save()
        
        # Chama vetoriza√ß√£o
        Documento.vetorizar_documentos_por_treinamento(self.treinamento)
        
        # Verifica que os embeddings foram gerados via save autom√°tico
        self.assertEqual(mock_embedding.call_count, 2)
        
        # Verifica que treinamento foi marcado como vetorizado
        self.treinamento.refresh_from_db()
        self.assertTrue(self.treinamento.treinamento_vetorizado)


def exemplo_uso_simplificado():
    """Demonstra como criar documentos com embedding autom√°tico."""
    
    print("üöÄ Exemplo de Uso Simplificado - Embedding Autom√°tico\n")
    
    # 1. Cria treinamento finalizado
    print("1Ô∏è‚É£ Criando treinamento finalizado...")
    treinamento = Treinamento.objects.create(
        tag="exemplo_auto",
        grupo="exemplos",
        conteudo="Conte√∫do do treinamento exemplo",
        treinamento_finalizado=True
    )
    print(f"   ‚úÖ Treinamento criado: {treinamento.tag}")
    
    # 2. Cria documento - embedding √© gerado automaticamente!
    print("\n2Ô∏è‚É£ Criando documento (embedding autom√°tico)...")
    documento = Documento.objects.create(
        treinamento=treinamento,
        conteudo="Este √© um documento de exemplo que ter√° embedding gerado automaticamente",
        ordem=1
    )
    print(f"   ‚úÖ Documento criado: {documento.pk}")
    print(f"   üß† Embedding gerado: {'Sim' if documento.embedding else 'N√£o'}")
    
    # 3. Busca sem√¢ntica funciona imediatamente
    print("\n3Ô∏è‚É£ Testando busca sem√¢ntica...")
    contexto = Documento.buscar_documentos_similares("documento exemplo")
    print(f"   üîç Contexto encontrado: {'Sim' if contexto else 'N√£o'}")
    
    print("\nüéâ Fluxo autom√°tico funcionando perfeitamente!")


def comparacao_antes_depois():
    """Mostra a diferen√ßa entre o fluxo antigo e novo."""
    
    print("üìä Compara√ß√£o: Antes vs. Depois\n")
    
    print("‚ùå ANTES (complicado):")
    print("   1. documento = Documento.objects.create(...)")
    print("   2. documento.generate_embedding()  # Manual!")
    print("   3. documento.save()")
    print("   4. if not documento.embedding:")
    print("   5.     documento._generate_embedding()  # Mais manual!")
    
    print("\n‚úÖ AGORA (autom√°tico):")
    print("   1. documento = Documento.objects.create(...)  # Tudo autom√°tico! üéâ")
    
    print("\nüèÜ Resultado:")
    print("   ‚Ä¢ 80% menos c√≥digo")
    print("   ‚Ä¢ Zero m√©todos manuais")
    print("   ‚Ä¢ Embedding sempre consistente")
    print("   ‚Ä¢ Impossible esquecer de gerar")


if __name__ == "__main__":
    print("üß™ Testando Fluxo Autom√°tico de Embedding...\n")
    
    # Demonstra diferen√ßas
    comparacao_antes_depois()
    
    print("\n" + "="*60 + "\n")
    
    # Exemplo pr√°tico (comentado para n√£o depender do Django)
    # exemplo_uso_simplificado()
    
    print("‚ú® Embedding autom√°tico implementado com sucesso!")